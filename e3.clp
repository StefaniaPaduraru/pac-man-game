(deffacts PAC-MAN
	(este-pe 1 1 1)
	(este-pe 1 2 1)
	(este-pe 1 3 1)
	(este-pe 1 4 1)
	(este-pe 1 5 1)
	(este-pe 1 6 1)
	(este-pe 1 7 1)
	(este-pe 1 8 1)
	(este-pe 1 9 1)
	(este-pe 1 10 1)
	(este-pe 1 11 1)

	(este-pe 2 1 1)
	(este-pe 2 2 kiwi)
	(este-pe 2 3 0)
	(este-pe 2 4 0)
	(este-pe 2 5 1)
	(este-pe 2 6 0)
	(este-pe 2 7 0)
	(este-pe 2 8 0)
	(este-pe 2 9 0)
	(este-pe 2 10 kiwi)
	(este-pe 2 11 1)

	(este-pe 3 1 1)
	(este-pe 3 2 1)
	(este-pe 3 3 1)
	(este-pe 3 4 0)
	(este-pe 3 5 f)
	(este-pe 3 6 0)
	(este-pe 3 7 1)
	(este-pe 3 8 1)
	(este-pe 3 9 1)
	(este-pe 3 10 0)
	(este-pe 3 11 1)

	(este-pe 4 1 1)
	(este-pe 4 2 ba)
	(este-pe 4 3 1)
	(este-pe 4 4 0)
	(este-pe 4 5 0)
	(este-pe 4 6 0)
	(este-pe 4 7 0)
	(este-pe 4 8 1)
	(este-pe 4 9 f)
	(este-pe 4 10 0)
	(este-pe 4 11 1)

	(este-pe 5 1 1)
	(este-pe 5 2 0)
	(este-pe 5 3 0)
	(este-pe 5 4 0)
	(este-pe 5 5 1)
	(este-pe 5 6 1)
	(este-pe 5 7 0)
	(este-pe 5 8 0)
	(este-pe 5 9 0)
	(este-pe 5 10 kiwi)
	(este-pe 5 11 1)

	(este-pe 6 1 1)
	(este-pe 6 2 1)
	(este-pe 6 3 0)
	(este-pe 6 4 0)
	(este-pe 6 5 1)
	(este-pe 6 6 PM)
	(este-pe 6 7 0)
	(este-pe 6 8 0)
	(este-pe 6 9 1)
	(este-pe 6 10 ba)
	(este-pe 6 11 1)

	(este-pe 7 1 1)
	(este-pe 7 2 0)
	(este-pe 7 3 0)
	(este-pe 7 4 0)
	(este-pe 7 5 1)
	(este-pe 7 6 1)
	(este-pe 7 7 1)
	(este-pe 7 8 0)
	(este-pe 7 9 1)
	(este-pe 7 10 1)
	(este-pe 7 11 1)

	(este-pe 8 1 1)
	(este-pe 8 2 0)
	(este-pe 8 3 1)
	(este-pe 8 4 0)
	(este-pe 8 5 f)
	(este-pe 8 6 0)
	(este-pe 8 7 1)
	(este-pe 8 8 0)
	(este-pe 8 9 1)
	(este-pe 8 10 kiwi)
	(este-pe 8 11 1)

	(este-pe 9 1 1)
	(este-pe 9 2 1)
	(este-pe 9 3 1)
	(este-pe 9 4 0)
	(este-pe 9 5 1)
	(este-pe 9 6 0)
	(este-pe 9 7 1)
	(este-pe 9 8 0)
	(este-pe 9 9 0)
	(este-pe 9 10 f)
	(este-pe 9 11 1)

	(este-pe 10 1 1)
	(este-pe 10 2 kiwi)
	(este-pe 10 3 0)
	(este-pe 10 4 0)
	(este-pe 10 5 1)
	(este-pe 10 6 0)
	(este-pe 10 7 0)
	(este-pe 10 8 0)
	(este-pe 10 9 0)
	(este-pe 10 10 ba)
	(este-pe 10 11 1)

	(este-pe 11 1 1)
	(este-pe 11 2 1)
	(este-pe 11 3 1)
	(este-pe 11 4 1)
	(este-pe 11 5 1)
	(este-pe 11 6 1)
	(este-pe 11 7 1)
	(este-pe 11 8 1)
	(este-pe 11 9 1)
	(este-pe 11 10 1)
	(este-pe 11 11 1)

	(este-f alba)
	(este-kiwi 200)
	(este-ba 10)
    (f-sus)
    (f-jos)
	(ultima-mutare none)
	(bila-alba nemancata)
	(r-miscare-sus)
	(r-miscare-jos)
	(r-miscare-stanga)
	(r-miscare-dreapta)
)

(defglobal ?*punctaj* = 0)


;regula blocare cu pereti
(defrule blocare-cu-pereti (declare (salience 100))
	?a1<-(este-pe 3 10 0)
	?a2<-(este-pe 3 6 0)
	?a3<-(este-pe 5 9 0)
	(este-pe 4 7 PM)
	(test (= ?*punctaj* 410))
	=>
;	(printout fiesire "mesaj" crlf)
	(retract ?a1 ?a2 ?a3)
	(assert (este-pe 3 10 1)
	        (este-pe 3 6 1)
            (este-pe 5 9 1))
)
;regula prioritate de miscare
(defrule regula-miscare-dreapta (declare (salience 8))
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c1&:(> ?c1 ?c) ? kiwi)
	=>
	(assert (r-miscare-dreapta ?c))
)
(defrule regula-miscare-stanga (declare (salience 6))
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c1&:(< ?c1 ?c) ? kiwi)
	=>
	(assert (r-miscare-stanga ?c))
)
(defrule regula-miscare-jos (declare (salience 4))
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ? ?l1&:(> ?l1 ?l) kiwi)
	=>
	(assert (r-miscare-jos ?c))
)
(defrule regula-miscare-sus (declare (salience 2))
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ? ?l1&:(< ?l1 ?l) kiwi)
	=>
	(assert (r-miscare-sus ?c))
)
(defrule regula-aditionala-jos
	(este-pe ?c ? PM)
	?a0<-(r-miscare-sus ?c)
	?a1<-(r-miscare-stanga ?c)
	=>
	(assert (r-miscare-jos ?c)))

;reguli miscare
(defrule miscare-sus (declare (salience 1))
	?a0<-(r-miscare-sus ?c)
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c ?l1&:(= ?l1 (- ?l 1)) 0)
	?a3<-(ultima-mutare ?x)
	(test (neq ?x jos))
	=>
;	(printout fiesire "PAC-MAN a mers sus" crlf)
	(retract ?a0 ?a1 ?a2 ?a3)
	(assert (este-pe ?c ?l1 PM)
			(este-pe ?c ?l 0)
			(ultima-mutare sus)
	)
)
(defrule miscare-jos (declare (salience 3))
	?a0<-(r-miscare-jos ?c)
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c ?l1&:(= ?l1 (+ ?l 1)) 0)
	?a3<-(ultima-mutare ?x)
	(test (neq ?x sus))
	=>
;	(printout fiesire "PAC-MAN a mers jos" crlf)
	(retract ?a0 ?a1 ?a2 ?a3)
	(assert (este-pe ?c ?l1 PM)
			(este-pe ?c ?l 0)
			(ultima-mutare jos)
	)
)
(defrule miscare-stanga (declare (salience 5))
	?a0<-(r-miscare-stanga ?c)
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c1&:(= ?c1 (- ?c 1)) ?l 0)
	?a3<-(ultima-mutare ?x)
	(test (neq ?x dreapta))
	=>
;	(printout fiesire "PAC-MAN a mers stanga" crlf)
	(retract ?a0 ?a1 ?a2 ?a3)
	(assert (este-pe ?c1 ?l PM)
			(este-pe ?c ?l 0)
			(ultima-mutare stanga)
	)
)
(defrule miscare-dreapta (declare (salience 7))
	?a0<-(r-miscare-dreapta ?c)
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c1&:(= ?c1 (+ ?c 1)) ?l 0)
	?a3<-(ultima-mutare ?x)
	(test (neq ?x stanga))
	=>
;	(printout fiesire "PAC-MAN a mers dreapta" crlf)
	(retract ?a0 ?a1 ?a2 ?a3)
	
	(assert (este-pe ?c ?l 0)
			(este-pe ?c1 ?l PM)
			(ultima-mutare dreapta)
	)
)

(defrule caz-blocare-sus (declare (salience 2))
	(este-pe ?c ?l PM)
	(este-pe ?c2&:(= ?c2 (- ?c 1)) ?l 1)
	(este-pe ?c1&:(= ?c1 (+ ?c 1)) ?l 1)
	(este-pe ?c ?l1&:(= ?l1 (- ?l 1)) 1)
	?a1<-(ultima-mutare sus)
	=>
	(retract ?a1)
	(assert (r-miscare-jos ?c))
	(assert (ultima-mutare jos))
)
(defrule caz-blocare-sus1
	(este-pe ?c ?l PM)
	(este-pe ?c2&:(= ?c2 (- ?c 1)) ?l f)
	(este-pe ?c1&:(= ?c1 (+ ?c 1)) ?l 1)
	(este-pe ?c ?l1&:(= ?l1 (- ?l 1)) 1)
	?a1<-(ultima-mutare sus)
	=>
	(retract ?a1)
	(assert (ultima-mutare jos))
	(assert (r-miscare-jos ?c))
)
(defrule caz-blocare-sus2
	(este-pe ?c ?l PM)
	(este-pe ?c2&:(= ?c2 (- ?c 1)) ?l 1)
	(este-pe ?c1&:(= ?c1 (+ ?c 1)) ?l f)
	(este-pe ?c ?l1&:(= ?l1 (- ?l 1)) 1)
	?a1<-(ultima-mutare sus)
	=>
	(retract ?a1)
	(assert (ultima-mutare jos))
	(assert (r-miscare-jos ?c))
)
(defrule caz-blocare-sus3
	(este-pe ?c ?l PM)
	(este-pe ?c2&:(= ?c2 (- ?c 1)) ?l 1)
	(este-pe ?c1&:(= ?c1 (+ ?c 1)) ?l 1)
	(este-pe ?c ?l1&:(= ?l1 (- ?l 1)) f)
	?a1<-(ultima-mutare sus)
	=>
	(retract ?a1)
	(assert (ultima-mutare jos))
	(assert (r-miscare-jos ?c))
)
(defrule caz-blocare-jos
	(este-pe ?c ?l PM)
	(este-pe ?c2&:(= ?c2 (- ?c 1)) ?l 1)
	(este-pe ?c1&:(= ?c1 (+ ?c 1)) ?l 1)
	(este-pe ?c ?l1&:(= ?l1 (+ ?l 1)) 1)
	?a1<-(ultima-mutare jos)
	=>
	(retract ?a1)
	(assert (r-miscare-sus ?c) )
	(assert (ultima-mutare sus))
)
(defrule caz-blocare-jos1
	(este-pe ?c ?l PM)
	(este-pe ?c2&:(= ?c2 (- ?c 1)) ?l f)
	(este-pe ?c1&:(= ?c1 (+ ?c 1)) ?l 1)
	(este-pe ?c ?l1&:(= ?l1 (+ ?l 1)) 1)
	?a1<-(ultima-mutare jos)
	=>
	(retract ?a1)
	(assert (ultima-mutare sus))
	(assert (r-miscare-sus ?c))
)
(defrule caz-blocare-jos2
	(este-pe ?c ?l PM)
	(este-pe ?c2&:(= ?c2 (- ?c 1)) ?l 1)
	(este-pe ?c1&:(= ?c1 (+ ?c 1)) ?l f)
	(este-pe ?c ?l1&:(= ?l1 (+ ?l 1)) 1)
	?a1<-(ultima-mutare jos)
	=>
	(retract ?a1)
	(assert (ultima-mutare sus))
	(assert (r-miscare-sus ?c))
)
(defrule caz-blocare-jos3
	(este-pe ?c ?l PM)
	(este-pe ?c2&:(= ?c2 (- ?c 1)) ?l 1)
	(este-pe ?c1&:(= ?c1 (+ ?c 1)) ?l 1)
	(este-pe ?c ?l1&:(= ?l1 (+ ?l 1)) f)
	?a1<-(ultima-mutare jos)
	=>
	(retract ?a1)
	(assert (ultima-mutare sus))
	(assert (r-miscare-sus ?c))
)

(defrule caz-blocare-dreapta
	(este-pe ?c ?l PM)
	(este-pe ?c2&:(= ?c2 (+ ?c 1)) ?l 1)
	(este-pe ?c ?l2&:(= ?l2 (- ?l 1)) 1)
	(este-pe ?c ?l1&:(= ?l1 (+ ?l 1)) 1)
	?a1<-(ultima-mutare dreapta)
	=>
	(retract ?a1)
	(assert (ultima-mutare stanga))
)
(defrule caz-blocare-dreapta1
	(este-pe ?c ?l PM)
	(este-pe ?c2&:(= ?c2 (+ ?c 1)) ?l f)
	(este-pe ?c ?l2&:(= ?l2 (- ?l 1)) 1)
	(este-pe ?c ?l1&:(= ?l1 (+ ?l 1)) 1)
	?a1<-(ultima-mutare dreapta)
	=>
	(retract ?a1)
	(assert (ultima-mutare stanga))
	(assert (r-miscare-stanga ?c))
)
(defrule caz-blocare-dreapta2
	(este-pe ?c ?l PM)
	(este-pe ?c2&:(= ?c2 (+ ?c 1)) ?l 1)
	(este-pe ?c ?l2&:(= ?l2 (- ?l 1)) f)
	(este-pe ?c ?l1&:(= ?l1 (+ ?l 1)) 1)
	?a1<-(ultima-mutare dreapta)
	=>
	(retract ?a1)
	(assert (ultima-mutare stanga))
	(assert (r-miscare-stanga ?c))
)
(defrule caz-blocare-dreapta3
	(este-pe ?c ?l PM)
	(este-pe ?c2&:(= ?c2 (+ ?c 1)) ?l 1)
	(este-pe ?c ?l2&:(= ?l2 (- ?l 1)) 1)
	(este-pe ?c ?l1&:(= ?l1 (+ ?l 1)) f)
	?a1<-(ultima-mutare dreapta)
	=>
	(retract ?a1)
	(assert (ultima-mutare stanga))
	(assert (r-miscare-stanga ?c))
)

(defrule caz-blocare-stanga
	(este-pe ?c ?l PM)
	(este-pe ?c2&:(= ?c2 (- ?c 1)) ?l 1)
	(este-pe ?c ?l2&:(= ?l2 (- ?l 1)) 1)
	(este-pe ?c ?l1&:(= ?l1 (+ ?l 1)) 1)
	?a1<-(ultima-mutare stanga)
	=>
	(retract ?a1)
	(assert (ultima-mutare dreapta))
)
(defrule caz-blocare-stanga1
	(bila-alba nemancata)
	(este-pe ?c ?l PM)
	(este-pe ?c2&:(= ?c2 (- ?c 1)) ?l f)
	(este-pe ?c ?l2&:(= ?l2 (- ?l 1)) 1)
	(este-pe ?c ?l1&:(= ?l1 (+ ?l 1)) 1)
	?a1<-(ultima-mutare stanga)
	=>
	(retract ?a1)
	(assert (ultima-mutare dreapta))
	(assert (r-miscare-dreapta ?c))
)
(defrule caz-blocare-stanga2
	(bila-alba nemancata)
	(este-pe ?c ?l PM)
	(este-pe ?c2&:(= ?c2 (- ?c 1)) ?l 1)
	(este-pe ?c ?l2&:(= ?l2 (- ?l 1)) f)
	(este-pe ?c ?l1&:(= ?l1 (+ ?l 1)) 1)   
	?a1<-(ultima-mutare stanga)
	=>
	(retract ?a1)
	(assert (ultima-mutare dreapta))
	(assert (r-miscare-dreapta ?c))
)
(defrule caz-blocare-stanga3
	(bila-alba nemancata)
	(este-pe ?c ?l PM)
	(este-pe ?c2&:(= ?c2 (- ?c 1)) ?l 1)
	(este-pe ?c ?l2&:(= ?l2 (- ?l 1)) 1)
	(este-pe ?c ?l1&:(= ?l1 (+ ?l 1)) f)	   
	?a1<-(ultima-mutare stanga)
	=>
	(retract ?a1)
	(assert (ultima-mutare dreapta))
	(assert (r-miscare-dreapta ?c))
)
;mancare fruct
(defrule kiwi-sus (declare (salience 10))
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c ?l1&:(= ?l1 (- ?l 1)) kiwi)
	?a3<-(ultima-mutare ?x)
	=>
	(retract ?a1 ?a2 ?a3)
	(assert (este-pe ?c ?l1 PM)
			(este-pe ?c ?l 0)
			(ultima-mutare sus)
	)
	(bind ?*punctaj* (+ ?*punctaj* 200))
	(printout fiesire "PAC-MAN a mancat fructul kiwi - sus pe coloana " ?c " si linia " ?l1 " cu punctajul "  ?*punctaj* crlf)
)
(defrule kiwi-jos (declare (salience 10))
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c ?l1&:(= ?l1 (+ ?l 1)) kiwi)
	?a3<-(ultima-mutare ?x)
	=>
	(retract ?a1 ?a2 ?a3)
	(assert (este-pe ?c ?l1 PM)
			(este-pe ?c ?l 0)
			(ultima-mutare jos)
	)
	(bind ?*punctaj* (+ ?*punctaj* 200))
	(printout fiesire "PAC-MAN a mancat fructul kiwi - jos pe coloana " ?c " si linia " ?l1 " cu punctajul " ?*punctaj* crlf)
)
(defrule kiwi-stanga (declare (salience 10))
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c1&:(= ?c1 (- ?c 1)) ?l kiwi)
	?a3<-(ultima-mutare ?x)
	=>
	(retract ?a1 ?a2 ?a3)
	(assert (este-pe ?c1 ?l PM)
			(este-pe ?c ?l 0)
			(ultima-mutare stanga)
	)
	(bind ?*punctaj* (+ ?*punctaj* 200))
	(printout fiesire "PAC-MAN a mancat fructul kiwi - stanga pe coloana " ?c1 " si linia " ?l " cu punctajul "  ?*punctaj* crlf)
)
(defrule kiwi-dreapta (declare (salience 10))
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c1&:(= ?c1 (+ ?c 1)) ?l kiwi)
	?a3<-(ultima-mutare ?x)
	=>
	(retract ?a1 ?a2 ?a3)
	(assert (este-pe ?c ?l 0)
			(este-pe ?c1 ?l PM)
			(ultima-mutare dreapta)
	)
	(bind ?*punctaj* (+ ?*punctaj* 200))
	(printout fiesire "PAC-MAN a mancat fructul kiwi - dreapta pe coloana " ?c1 " si linia " ?l " cu punctajul " ?*punctaj* crlf)
)

;mancare bila alba
(defrule ba-sus (declare (salience 9))
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c ?l1&:(= ?l1 (- ?l 1)) ba)
	?a3<-(este-f alba)
	?a4<-(bila-alba nemancata)
	?a5<-(ultima-mutare ?x)
	=>
	(printout fiesire "PAC-MAN a mancat bila alba - sus pe coloana " ?c " si linia " ?l1  crlf)
	(retract ?a1 ?a2 ?a3 ?a4 ?a5)
	(assert (este-pe ?c ?l1 PM)
			(este-pe ?c ?l 0)
			(este-f albastra)
			(bila-alba mancata)
		    (ultima-mutare jos)
	)
	(bind ?*punctaj* (+ ?*punctaj* 100))
)
(defrule ba-jos (declare (salience 9))
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c ?l1&:(= ?l1 (+ ?l 1)) ba)
	?a3<-(este-f alba)
	?a4<-(bila-alba nemancata)
	?a5<-(ultima-mutare ?x)
	=>
	(printout fiesire "PAC-MAN a mancat bila alba - jos pe coloana " ?c " si linia " ?l1  crlf)
	(retract ?a1 ?a2 ?a3 ?a4 ?a5)
	(assert (este-pe ?c ?l1 PM)
			(este-pe ?c ?l 0)
			(este-f albastra)
			(bila-alba mancata)
		    (ultima-mutare sus)
	)
	(bind ?*punctaj* (+ ?*punctaj* 10))
)
(defrule ba-stanga (declare (salience 9))
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c1&:(= ?c1 (- ?c 1)) ?l ba)
	?a3<-(este-f alba)
	?a4<-(bila-alba nemancata)
	?a5<-(ultima-mutare ?x)
	=>
	(printout fiesire "PAC-MAN a mancat bila alba - stanga pe coloana " ?c1 " si linia " ?l  crlf)
	(retract ?a1 ?a2 ?a3 ?a4 ?a5)
	(assert (este-pe ?c1 ?l PM)
			(este-pe ?c ?l 0)
			(este-f albastra)
			(bila-alba mancata)
			(ultima-mutare dreapta)
	)
	(bind ?*punctaj* (+ ?*punctaj* 10))
)
(defrule ba-dreapta (declare (salience 9))
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c1&:(= ?c1 (+ ?c 1)) ?l ba)
	?a3<-(este-f alba)
	?a4<-(bila-alba nemancata)
	?a5<-(ultima-mutare ?x)
	=>
	(printout fiesire "PAC-MAN a mancat bila alba - dreapta pe coloana " ?c1 " si linia " ?l crlf)
	(retract ?a1 ?a2 ?a3 ?a4 ?a5)
	(assert (este-pe ?c ?l 0)
			(este-pe ?c1 ?l PM)
			(este-f albastra)
			(bila-alba mancata)
			(ultima-mutare stanga)
	)
	(bind ?*punctaj* (+ ?*punctaj* 10))
)

;reguli mancare fantoma
(defrule mananca-fantoma-sus (declare (salience 8))
	?a0<-(este-f albastra)
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c ?l1&:(= ?l1 (- ?l 1)) f)
	?a3<-(bila-alba mancata)
	?a4<-(ultima-mutare ?x)
	(test (neq ?x jos))
	=>
	(printout fiesire "PAC-MAN a mancat fantoma mergand in sus pe coloana " ?c " si linia " ?l1  crlf)
	(retract ?a0 ?a1 ?a2 ?a3 ?a4)
	(assert (este-pe ?c ?l1 PM)
			(este-pe ?c ?l 0)
			(este-f alba)
			(bila-alba nemancata)
			(ultima-mutare sus)
	)
)
(defrule mananca-fantoma-jos (declare (salience 8))
	?a0<-(este-f albastra)
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c ?l1&:(= ?l1 (+ ?l 1)) f)
	?a3<-(bila-alba mancata)
	?a4<-(ultima-mutare ?x)
	(test (neq ?x sus))
	=>
	(printout fiesire "PAC-MAN a mancat fantoma mergand in jos pe coloana " ?c " si linia " ?l1 crlf)
	(retract ?a0 ?a1 ?a2 ?a3 ?a4)
	(assert (este-pe ?c ?l1 PM)
			(este-pe ?c ?l 0)
			(este-f alba)
			(bila-alba nemancata)
			(ultima-mutare jos)
	)
)
(defrule mananca-fantoma-stanga (declare (salience 8))
	?a0<-(este-f albastra)
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c1&:(= ?c1 (- ?c 1)) ?l f)
	?a3<-(bila-alba mancata)
	?a4<-(ultima-mutare ?x)
	(test (neq ?x dreapta))
	=>
	(printout fiesire "PAC-MAN a mancat fantoma mergand in stanga pe coloana " ?c1 " si linia " ?l crlf)
	(retract ?a0 ?a1 ?a2 ?a3 ?a4)
	(assert (este-pe ?c1 ?l PM)
			(este-pe ?c ?l 0)
			(este-f alba)
			(bila-alba nemancata)
			(ultima-mutare stanga)
	)
	;(bind ?*contor* (+ ?*contor* 1))
)
(defrule mananca-fantoma-dreapta (declare (salience 8))
	?a0<-(este-f albastra)
	?a1<-(este-pe ?c ?l PM)
	?a2<-(este-pe ?c1&:(= ?c1 (+ ?c 1)) ?l f)
	?a3<-(bila-alba mancata)
	?a4<-(ultima-mutare ?x)
	(test (neq ?x stanga))
	=>
	(printout fiesire "PAC-MAN a mancat fantoma mergand in dreapta pe coloana " ?c1 " si linia " ?l crlf)
	(retract ?a0 ?a1 ?a2 ?a3 ?a4)
	(assert (este-pe ?c1 ?l PM)
			(este-pe ?c ?l 0)
			(este-f alba)
			(bila-alba nemancata)
			(ultima-mutare dreapta)
	)
)
; pierdere joc
(defrule alerta-fantoma
	(este-pe ?c ?l PM)
	(este-pe ?c ?l f)
	=>
	(printout fiesire "GAME OVER! AI LOVIT O FANTOMA PE LINIA " ?l " si coloana " ?c crlf)
)
(defrule alerta-perete
	(este-pe ?c ?l PM)
	(este-pe ?c ?l 1)
	=>
	(printout fiesire "GAME OVER! AI LOVIT PERETELE PE LINIA " ?l " si coloana " ?c crlf)
)
;castigare joc 
(defrule castig-fructe (declare (salience 11))
	(este-pe ?c ?l PM)
	(test(= ?*punctaj* 1000)) 
	=>
	(printout fiesire "Ai castigat! Ai reusit sa mananci toate fructele " crlf)
)
(defrule castig-fructe-si-bile-partial-2 (declare (salience 11))
	(este-pe ?c ?l PM)
	(test(> ?*punctaj* 1000)) 
	(test(< ?*punctaj* 1030))
	=>
	(printout fiesire "Ai castigat! Ai reusit sa mananci toate fructele si o parte din bilele albe" crlf)
	
)
(defrule castig-fructe-si-bile-total (declare (salience 11))
	?a0<-(este-pe ?c ?l PM)
	(test (= ?*punctaj* 1030)) 
	=>
	(printout fiesire "Ai castigat! Ai reusit sa mananci toate fructele si toate bilele albe" crlf)
	(retract ?a0)
	(assert (este-pe ?c ?l 0))
	
)

;regula ce deschide fisierul
(defrule deschidere_fisier (declare (salience 999))
	=>
	(open date.txt fiesire "w")
	(printout t "Fisierul a fost deschis" crlf)
)
;regula ce inchide fisierul
(defrule inchidere_fisier (declare (salience -1))
	=>
	(close fiesire)
	(printout t "Fisierul a fost inchis" crlf)
)




